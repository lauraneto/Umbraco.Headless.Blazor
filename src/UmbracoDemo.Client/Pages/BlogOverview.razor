@using UmbracoDemo.Client.Clients
<Hero Title="@(Page?.Title ?? Page?.Name)" Intro="@(Page?.Intro?.Markup)" />

<MudGrid >
    @foreach (var child in Children)
    {
        <MudItem xs="12" sm="6" md="4">
             <MudCard>
                 @{
                     var image = child.Image?.FirstOrDefault();
                     var imageUrl = image == null
                         ? "http://satyr.io/980x16:9"
                         : $"{ApiUrl}{image.Url}?width=400&height=270";
                 }
                 <MudCardMedia Image="@imageUrl" Height="200" />
                 <MudCardContent>
                     <MudText Typo="Typo.h5">@(child.Title ?? child.Name)</MudText>
                     <MudText Typo="Typo.body2" Class="py-2">Date: @(child.Date?.ToString("dd MMMM yyyy"))</MudText>
                     <MudText Typo="Typo.body2">@((MarkupString)(child.Intro?.Markup ?? ""))</MudText>
                 </MudCardContent>
                 <MudCardActions>
                     <MudButton Href="@child.Path" Variant="Variant.Text" Color="Color.Transparent" EndIcon="@Icons.Material.Filled.ArrowRight">Read more</MudButton>
                 </MudCardActions>
             </MudCard>
        </MudItem>
    }
</MudGrid>

@code {
    [Parameter]
    public UmbracoDemo.Client.Models.Pages.BlogOverview? Page { get; set; }

    [Inject]
    public required IUmbracoClient UmbracoClient { get; set; }

    [Inject]
    public required IConfiguration Config { get; set; }
    
    private string? ApiUrl { get; set; }

    private ICollection<UmbracoDemo.Client.Models.Pages.BlogDetail> Children { get; set; } = new List<UmbracoDemo.Client.Models.Pages.BlogDetail>();

    protected override void OnInitialized()
    {
        ApiUrl = Config["UmbracoApi:BaseUrl"];
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Page == null)
        {
            Children = new List<UmbracoDemo.Client.Models.Pages.BlogDetail>();
            return;
        }

        Children = (await UmbracoClient.GetChildrenByPath(Page.Path)).OfType<UmbracoDemo.Client.Models.Pages.BlogDetail>().ToList();
    }

}